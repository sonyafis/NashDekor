-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.employees
(
    id_employ serial NOT NULL,
    fio character varying(200) COLLATE pg_catalog."default" NOT NULL,
    date_birth date NOT NULL,
    pasport character varying(200) COLLATE pg_catalog."default" NOT NULL,
    bank_details character varying(200) COLLATE pg_catalog."default" NOT NULL,
    having_family character varying(200) COLLATE pg_catalog."default" NOT NULL,
    health_condition character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT employees_pkey PRIMARY KEY (id_employ)
);

CREATE TABLE IF NOT EXISTS public.materials
(
    id_material serial NOT NULL,
    material_name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    unit_price numeric(10, 2) NOT NULL,
    stock_quantity integer NOT NULL,
    min_quantity integer NOT NULL,
    package_quantity integer NOT NULL,
    unit character varying(200) COLLATE pg_catalog."default" NOT NULL,
    id_type_material integer NOT NULL,
    CONSTRAINT materials_pkey PRIMARY KEY (id_material)
);

CREATE TABLE IF NOT EXISTS public.partners
(
    id_part serial NOT NULL,
    partner_name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    director character varying(200) COLLATE pg_catalog."default" NOT NULL,
    email character varying(200) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(200) COLLATE pg_catalog."default" NOT NULL,
    legal_addres character varying(200) COLLATE pg_catalog."default" NOT NULL,
    inn bigint NOT NULL,
    rating integer NOT NULL,
    id_type_part integer NOT NULL,
    CONSTRAINT partners_pkey PRIMARY KEY (id_part)
);

CREATE TABLE IF NOT EXISTS public.products
(
    id_product serial NOT NULL,
    product_name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    articul character varying(200) COLLATE pg_catalog."default" NOT NULL,
    min_cost double precision NOT NULL,
    width double precision NOT NULL,
    id_type_product integer NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (id_product)
);

CREATE TABLE IF NOT EXISTS public.requests
(
    id_req serial NOT NULL,
    id_product integer NOT NULL,
    cost double precision NOT NULL,
    date date NOT NULL,
    count integer NOT NULL,
    id_part integer NOT NULL,
    id_employ integer NOT NULL,
    CONSTRAINT requests_pkey PRIMARY KEY (id_req)
);

CREATE TABLE IF NOT EXISTS public.sklad
(
    id_sklad serial NOT NULL,
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT sklad_pkey PRIMARY KEY (id_sklad)
);

CREATE TABLE IF NOT EXISTS public.specialization
(
    id_specialization serial NOT NULL,
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT specialization_pkey PRIMARY KEY (id_specialization)
);

CREATE TABLE IF NOT EXISTS public.staff
(
    id_staff serial NOT NULL,
    id_employ integer NOT NULL,
    id_specialization integer NOT NULL,
    CONSTRAINT staff_pkey PRIMARY KEY (id_staff)
);

CREATE TABLE IF NOT EXISTS public.suppliers
(
    id_suppliers serial NOT NULL,
    id_type_sup integer NOT NULL,
    supplier_name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    inn bigint NOT NULL,
    rating integer NOT NULL,
    date date NOT NULL,
    CONSTRAINT suppliers_pkey PRIMARY KEY (id_suppliers)
);

CREATE TABLE IF NOT EXISTS public.supplies
(
    id_supplies serial NOT NULL,
    id_suppliers integer NOT NULL,
    id_material integer NOT NULL,
    id_sklad integer NOT NULL,
    count integer NOT NULL,
    CONSTRAINT supplies_pkey PRIMARY KEY (id_supplies)
);

CREATE TABLE IF NOT EXISTS public.type_material
(
    id_type_material serial NOT NULL,
    type_material character varying(200) COLLATE pg_catalog."default" NOT NULL,
    percentage_material_defects double precision NOT NULL,
    CONSTRAINT type_material_pkey PRIMARY KEY (id_type_material)
);

CREATE TABLE IF NOT EXISTS public.type_part_sup
(
    id_type_part_sup serial NOT NULL,
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT type_part_sup_pkey PRIMARY KEY (id_type_part_sup)
);

CREATE TABLE IF NOT EXISTS public.type_product
(
    id_type_product serial NOT NULL,
    type_product character varying(200) COLLATE pg_catalog."default" NOT NULL,
    coefficient_type_product double precision NOT NULL,
    CONSTRAINT type_product_pkey PRIMARY KEY (id_type_product)
);

ALTER TABLE IF EXISTS public.materials
    ADD CONSTRAINT type_material_fr FOREIGN KEY (id_type_material)
    REFERENCES public.type_material (id_type_material) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.partners
    ADD CONSTRAINT type_part_fr FOREIGN KEY (id_type_part)
    REFERENCES public.type_part_sup (id_type_part_sup) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT type_product_fr FOREIGN KEY (id_type_product)
    REFERENCES public.type_product (id_type_product) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT employees_fr FOREIGN KEY (id_employ)
    REFERENCES public.employees (id_employ) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT partners_fr FOREIGN KEY (id_part)
    REFERENCES public.partners (id_part) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT product_fr FOREIGN KEY (id_product)
    REFERENCES public.products (id_product) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.staff
    ADD CONSTRAINT employees_fr FOREIGN KEY (id_employ)
    REFERENCES public.employees (id_employ) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.staff
    ADD CONSTRAINT specialization_fr FOREIGN KEY (id_specialization)
    REFERENCES public.specialization (id_specialization) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.suppliers
    ADD CONSTRAINT type_sup_fr FOREIGN KEY (id_type_sup)
    REFERENCES public.type_part_sup (id_type_part_sup) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.supplies
    ADD CONSTRAINT material_fr FOREIGN KEY (id_material)
    REFERENCES public.materials (id_material) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.supplies
    ADD CONSTRAINT sklad_fr FOREIGN KEY (id_sklad)
    REFERENCES public.sklad (id_sklad) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.supplies
    ADD CONSTRAINT suppliers_fr FOREIGN KEY (id_suppliers)
    REFERENCES public.suppliers (id_suppliers) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;